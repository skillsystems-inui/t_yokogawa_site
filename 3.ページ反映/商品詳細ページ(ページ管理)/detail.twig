{#
This file is part of EC-CUBE

Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.

http://www.ec-cube.co.jp/

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
#}
{% extends 'default_frame.twig' %}

{% set body_class = 'product_page' %}

{% block stylesheet %}
    <style>

        .slick-slider {
            margin-bottom: 30px;
        }

        .slick-dots {
            position: absolute;
            bottom: -45px;
            display: block;
            width: 100%;
            padding: 0;
            list-style: none;
            text-align: center;
        }

        .slick-dots li {
            position: relative;
            display: inline-block;
            width: 20px;
            height: 20px;
            margin: 0 5px;
            padding: 0;

            cursor: pointer;
        }

        .slick-dots li button {
            font-size: 0;
            line-height: 0;
            display: block;
            width: 20px;
            height: 20px;
            padding: 5px;
            cursor: pointer;
            color: transparent;
            border: 0;
            outline: none;
            background: transparent;
        }

        .slick-dots li button:hover,
        .slick-dots li button:focus {
            outline: none;
        }

        .slick-dots li button:hover:before,
        .slick-dots li button:focus:before {
            opacity: 1;
        }

        .slick-dots li button:before {
            content: " ";
            line-height: 20px;
            position: absolute;
            top: 0;
            left: 0;
            width: 12px;
            height: 12px;
            text-align: center;
            opacity: .25;
            background-color: black;
            border-radius: 50%;

        }

        .slick-dots li.slick-active button:before {
            opacity: .75;
            background-color: black;
        }

        .slick-dots li button.thumbnail img {
            width: 0;
            height: 0;
        }

    </style>
{% endblock %}

{% block javascript %}
    <script>
	    window.onload = function(){
			$form = $('#form1');
		}
	</script>
    <script>
        eccube.classCategories = {{ class_categories_as_json(Product)|raw }};

        // 規格2に選択肢を割り当てる。
        function fnSetClassCategories(form, classcat_id2_selected) {
            var $form = $(form);
            var product_id = $form.find('input[name=product_id]').val();
            var $sele1 = $form.find('select[name=classcategory_id1]');
            var $sele2 = $form.find('select[name=classcategory_id2]');
            eccube.setClassCategories($form, product_id, $sele1, $sele2, classcat_id2_selected);
        }

        {% if form.classcategory_id2 is defined %}
        fnSetClassCategories(
            $('#form1'), {{ form.classcategory_id2.vars.value|json_encode|raw }}
        );
        {% elseif form.classcategory_id1 is defined %}
        eccube.checkStock($('#form1'), {{ Product.id }}, {{ form.classcategory_id1.vars.value|json_encode|raw }}, null);
        {% endif %}
    </script>
    <script>
        $(function() {
            // bfcache無効化
            $(window).bind('pageshow', function(event) {
                if (event.originalEvent.persisted) {
                    location.reload(true);
                }
            });

            $('.item_visual').slick({
                dots: false,
                arrows: false,
                responsive: [{
                    breakpoint: 768,
                    settings: {
                        dots: true
                    }
                }]
            });

            $('.slideThumb').on('click', function() {
                var index = $(this).attr('data-index');
                $('.item_visual').slick('slickGoTo', index, false);
            })
        });
    </script>
    <script>
        $(function() {
            $('.add-cart').on('click', function(event) {
                
                //追加価格のオプションがあれば追加価格をセットする.
                //eccube.checkOptionPrice($('#form1'));

                event.preventDefault();
                $form = $('#form1');
                $.ajax({
                    url: $form.attr('action'),
                    type: $form.attr('method'),
                    data: $form.serialize(),
                    dataType: 'json',
                    beforeSend: function(xhr, settings) {
                        // Buttonを無効にする
                        $('.add-cart').prop('disabled', true);
                    }
                }).done(function(data) {
                    // レスポンス内のメッセージをalertで表示
                    $.each(data.messages, function() {
                        $('#ec-modal-header').html(this);
                    });

                    $('.ec-modal').show()

                    // カートブロックを更新する
                    $.ajax({
                        url: "{{ url('block_cart') }}",
                        type: 'GET',
                        dataType: 'html'
                    }).done(function(html) {
                        $('.ec-headerRole__cart').html(html);
                    });
                }).fail(function(data) {
                    alert('{{ 'カートへの追加に失敗しました。'|trans }}');
                }).always(function(data) {
                    // Buttonを有効にする
                    $('.add-cart').prop('disabled', false);
                });
            });
        });
        
        //詳細を指定する
        $('.select-options').on('click', function() {
            
            {% if form.classcategory_id1 is defined %}
	            // 規格1フォームの必須チェック
	            let relmts = document.getElementsByName('classcategory_id1');
				let len = relmts.length;
				let sizeCheck = '';
				for (let i = 0; i < len; i++){
				    if (relmts.item(i).checked){
				        sizeCheck = relmts.item(i).value;
				    }
				}
				//サイズがチェックされていなければエラー表示
	            if (sizeCheck == '') {
	                //アラート
	                alert('サイズを選択してください');
	                
	                //サイズ選択欄の背景色を赤にする
	                var size_sentaku_id = 'classcategory_id1';
		    		
		    		if(document.getElementById(size_sentaku_id) != null){
						document.getElementById(size_sentaku_id).style.color="red";
					}
	                
	                return true;
	            }
	            
            {% endif %}

            {% if form.classcategory_id2 is defined %}
            // 規格2フォームの必須チェック
            if ($('#classcategory_id2').val() == '__unselected' || $('#classcategory_id2').val() == '') {
                $('#classcategory_id2')[0].setCustomValidity('{{ '項目が選択されていません'|trans }}');
                return true;
            } else {
                $('#classcategory_id2')[0].setCustomValidity('');
            }
            {% endif %}

            // 個数フォームのチェック
            if ($('#quantity').val() < 1) {
                $('#quantity')[0].setCustomValidity('{{ '1以上で入力してください。'|trans }}');
                return true;
            } else {
                $('#quantity')[0].setCustomValidity('');
            }
            
            
            
            
            //詳細ブロックを表示する
            var syousai_sitei_id = 'blk_syousai_sitei';
    		if(document.getElementById(syousai_sitei_id) != null){
				document.getElementById(syousai_sitei_id).style.display="block";
			}
            
            //商品メインブロックを非表示にする
            var syohin_main_id = 'blk_syohin_main';
    		if(document.getElementById(syohin_main_id) != null){
				document.getElementById(syohin_main_id).style.display="none";
			}
			
			//ページトップへ移動
			document.body.scrollTop = document.documentElement.scrollTop = 0;
        });
        
        //前に戻る
        $('.back-main').on('click', function() {
            //詳細ブロックを非表示にする
            var syousai_sitei_id = 'blk_syousai_sitei';
    		if(document.getElementById(syousai_sitei_id) != null){
				document.getElementById(syousai_sitei_id).style.display="none";
			}
            
            //商品メインブロックを表示する
            var syohin_main_id = 'blk_syohin_main';
    		if(document.getElementById(syohin_main_id) != null){
				document.getElementById(syohin_main_id).style.display="block";
			}
			
			//ページトップへ移動
			document.body.scrollTop = document.documentElement.scrollTop = 0;
        });
        
        
        
    </script>
{% endblock %}

{% block main %}
    <div class="ec-productRole">
        <div class="ec-grid2">
            <div class="ec-grid2__cell">
                <div class="ec-sliderItemRole">

                    <div class="item_visual">
                        {% for ProductImage in Product.ProductImage %}
                            <div class="slide-item"><img src="{{ asset(ProductImage, 'save_image') }}"></div>
                        {% else %}
                            <div class="slide-item"><img src="{{ asset(''|no_image_product, 'save_image') }}"/></div>
                        {% endfor %}
                    </div>
                    <div class="item_nav">
                        {% for ProductImage in Product.ProductImage %}
                            <div class="slideThumb" data-index="{{ loop.index0 }}"><img src="{{ asset(ProductImage, 'save_image') }}"></div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        
        <form action="{{ url('product_add_cart', {id:Product.id}) }}" method="post" id="form1" name="form1">
                    
            <div class="ec-grid2__cell" style="width:100%;">
                <div class="ec-productRole__profile">
                    {# 商品名 #}
                    <div class="ec-productRole__title">
                        <h2 class="ec-headingTitle"><b>{{ Product.name }}</b></h2>
                    </div>
                    {# 商品説明 #}
                    <div class="ec-productRole__description" style="padding-top:10px;">{{ Product.description_detail|raw|nl2br }}
                    {# タグ #}
                    <!--
                    <ul class="ec-productRole__tags">
                        {% for Tag in Product.Tags %}
                            <li class="ec-productRole__tag tag_{{ Tag.id }}">{{ Tag }}</li>
                        {% endfor %}
                    </ul>
                    -->
                    
                    {# 商品コード #}
                    <!--
                    {% if Product.code_min is not empty %}
                        <div class="ec-productRole__code">
                            {{ '商品コード'|trans }}： <span class="product-code-default">{{ Product.code_min }}{% if Product.code_min != Product.code_max %} 〜 {{ Product.code_max }}{% endif %}</span>
                        </div>
                    {% endif %}
                    -->
                    {# 関連カテゴリ #}
                    <!--
                    {% if Product.ProductCategories is not empty %}
                        <div class="ec-productRole__category">
                            <div>{{ '関連カテゴリ'|trans }}</div>
                            {% for ProductCategory in Product.ProductCategories %}
                                <ul>
                                    <li>
                                        {% for Category in ProductCategory.Category.path %}
                                            <a href="{{ url('product_list') }}?category_id={{ Category.id }}">{{ Category.name }}</a> {%- if loop.last == false %}
                                            <span>＞</span>{% endif -%}
                                        {% endfor %}
                                    </li>
                                </ul>
                            {% endfor %}
                        </div>
                    {% endif %}
                    -->
                        {% if Product.stock_find %}
                         <div id="blk_syohin_main" style="display:block;">   
                            <!-- サイズ -->
                            {% if form.classcategory_id1 is defined %}
                                <div class="">
                                    {{ form_widget(form.classcategory_id1) }}
                                    {{ form_errors(form.classcategory_id1) }}
                                </div>
                                {% if form.classcategory_id2 is defined %}
                                    <div class="">
                                        {{ form_widget(form.classcategory_id2) }}
                                        {{ form_errors(form.classcategory_id2) }}
                                    </div>
                                {% endif %}
                            {% endif %}
                            
                            <!-- 個数(サイズのみ) -->
                            <div class="ec-numberInput">
                            	<span>{{ '個数:'|trans }}</span>
                                {{ form_widget(form.quantity) }}
                                {{ form_errors(form.quantity) }}
                                <span>{{ '個'|trans }}</span>
                            </div>
                            
                            {# 定価(表示用) #}
		                    {% if Product.hasProductClass -%}
		                        <div class="ec-productRole__priceRegular">
		                            {% if Product.getPrice01Min is not null and Product.getPrice01IncTaxMin == Product.getPrice01IncTaxMax %}
		                                <span class="ec-productRole__priceRegularPrice">{{ '定価'|trans }}：<span class="price01-view-default">{{ Product.getPrice01IncTaxMin|price }}</span></span>
		                                <span class="ec-productRole__priceRegularTax">{{ '(税込)'|trans }}</span>
		                            {% elseif Product.getPrice01Min is not null and Product.getPrice01Max is not null %}
		                                <span class="ec-productRole__priceRegularPrice">{{ '定価'|trans }}：<span class="price01-view-default">{{ Product.getPrice01IncTaxMin|price }}〜 {{ Product.getPrice01IncTaxMax|price }}</span></span>
		                                <span class="ec-productRole__priceRegularTax">{{ '(税込)'|trans }}</span>
		                            {% endif %}
		                        </div>
		                    {% else %}
		                        {% if Product.getPrice01Max is not null %}
		                            <span class="ec-productRole__priceRegularPrice">{{ '定価'|trans }}：{{ Product.getPrice01IncTaxMin|price }}</span>
		                            <span class="ec-productRole__priceRegularTax">{{ '(税込)'|trans }}</span>
		                        {% endif %}
		                    {% endif %}
		                    
		                    {# 販売価格(表示用) #}
		                    <div class="ec-productRole__price" style="font-size:20px; color:#000;border-top:1px dotted #ccc;">
		                        {% if Product.hasProductClass -%}
		                            {% if Product.getPrice02IncTaxMin == Product.getPrice02IncTaxMax %}
		                                <div class="ec-price">
		                                    <span class="ec-price__price price02-view-default">{{ Product.getPrice02IncTaxMin|price }}</span>
		                                    <span class="ec-price__tax">{{ '(税込)'|trans }}</span>
		                                </div>
		                            {% elseif Product.getPrice02Min is not null and Product.getPrice02Max is not null %}
		                                <span class="ec-productRole__priceRegularPrice">{{ '定価'|trans }}：<span class="price02-view-default">{{ Product.getPrice02IncTaxMin|price }}〜 {{ Product.getPrice02IncTaxMax|price }}</span></span>
		                                <span class="ec-productRole__priceRegularTax">{{ '(税込)'|trans }}</span>
		                            {% else %}
		                                <div class="ec-price">
		                                    <span class="ec-productRole__priceRegularPrice">{{ '価格'|trans }}：
		                                    </span><span class="ec-price__price price02-view-default" style="padding-left:0px;font-weight: normal;;">{{ Product.getPrice02IncTaxMin|price }}</span>
		                                    <span class="ec-price__tax">{{ '(税込)'|trans }}</span>
		                                </div>
		                            {% endif %}
		                        {% else %}
		                            <div class="ec-price">
		                                <span class="ec-price__price">{{ Product.getPrice02IncTaxMin|price }}</span>
		                                <span class="ec-price__tax">{{ '(税込)'|trans }}</span>
		                            </div>
		                        {% endif %}
		                    </div>
		                    
                            <!-- 金額(サイズのみ) -->
                            
                            <!-- 詳細を指定するボタン -->
                            <div class="ec-productRole__btn" style="padding-top:10px;width:100%;">
                                <button type="button" class="ec-blockBtn--action select-options" style="outline:none; background: url({{ asset('assets/img/btn_syousai.png') }}) no-repeat scroll 0 0; border-color:#fff;min-height:100px; height:auto;">
                                </button>
                            </div>
                            
                            
                            <!-- 自由入力 -->
					        {% if Product.freearea %}
					             <div class="ec-productRole__description">
					                 {{ include(template_from_string(Product.freearea)) }}
					            </div>
					        {% endif %}
					     </div>
                         <!-- .商品メインブロック -->
                        {% else %}
                            <div class="ec-productRole__btn">
                                <button type="button" class="ec-blockBtn--action" disabled="disabled">
                                    {{ 'ただいま品切れ中です。'|trans }}
                                </button>
                            </div>
                        {% endif %} 
                            
                            
                            
                        <!----- 【詳細を指定】ブロック ----->
                        {% if Product.stock_find %}
                         <div id="blk_syousai_sitei" style="display:none;">
                            {# 詳細を指定する #}
                            <div class="ec-productRole__profile" style="width:100%; padding-top:100px;">
			                    <div style="margin-left:auto; margin-right:auto; background: url({{ asset('assets/img/mark_write_sentence.png') }}) no-repeat scroll 0 0; border-color:#fff;min-height:150px; height:auto; outline:none;">
	                            </div>
			                </div>
                            
                            
                            
		                    <!-- オプション一覧 -->
		                    <div style="position: relative;border-radius: 2px;background-color: #fff;">
		                                
			                            <div class="ec-productRole__actions">
			                                
			                                
			                                
			                                
			                                {# 定価 #}
						                    {% if Product.hasProductClass -%}
						                        <div class="ec-productRole__priceRegular">
						                            {% if Product.getPrice01Min is not null and Product.getPrice01IncTaxMin == Product.getPrice01IncTaxMax %}
						                                <span class="ec-productRole__priceRegularPrice">{{ '定価'|trans }}：<span class="price01-default">{{ Product.getPrice01IncTaxMin|price }}</span></span>
						                                <span class="ec-productRole__priceRegularTax">{{ '(税込)'|trans }}</span>
						                            {% elseif Product.getPrice01Min is not null and Product.getPrice01Max is not null %}
						                                <span class="ec-productRole__priceRegularPrice">{{ '定価'|trans }}：<span class="price01-default">{{ Product.getPrice01IncTaxMin|price }}〜 {{ Product.getPrice01IncTaxMax|price }}</span></span>
						                                <span class="ec-productRole__priceRegularTax">{{ '(税込)'|trans }}</span>
						                            {% endif %}
						                        </div>
						                    {% else %}
						                        {% if Product.getPrice01Max is not null %}
						                            <span class="ec-productRole__priceRegularPrice">{{ '定価'|trans }}：{{ Product.getPrice01IncTaxMin|price }}</span>
						                            <span class="ec-productRole__priceRegularTax">{{ '(税込)'|trans }}</span>
						                        {% endif %}
						                    {% endif %}
						                    {# 販売価格 #}
						                    <div class="ec-productRole__price" style="font-size:20px; color:#000;border-top:1px dotted #ccc;">
						                        {% if Product.hasProductClass -%}
						                            {% if Product.getPrice02IncTaxMin == Product.getPrice02IncTaxMax %}
						                                <div class="ec-price">
						                                    <span class="ec-price__price price02-default">{{ Product.getPrice02IncTaxMin|price }}</span>
						                                    <span class="ec-price__tax">{{ '(税込)'|trans }}</span>
						                                </div>
						                            {% else %}
						                                <div class="ec-price">
						                                    <span class="ec-productRole__priceRegularPrice">{{ '価格'|trans }}：
						                                    </span><span class="ec-price__price price02-default" style="padding-left:0px;font-weight: normal;;">{{ Product.getPrice02IncTaxMin|price }}</span>
						                                    <span class="ec-price__tax">{{ '(税込)'|trans }}</span>
						                                </div>
						                            {% endif %}
						                        {% else %}
						                            <div class="ec-price">
						                                <span class="ec-price__price">{{ Product.getPrice02IncTaxMin|price }}</span>
						                                <span class="ec-price__tax">{{ '(税込)'|trans }}</span>
						                            </div>
						                        {% endif %}
						                    </div>
						                    
			                            </div>
			                            
			                            
			                            <div class="ec-productRole__btn" style="width:100%;">
			                                <button type="submit" class="ec-blockBtn--action add-cart" style="outline:none; background: url({{ asset('assets/img/btn_cart.png') }}) no-repeat scroll 0 0; border-color:#fff;min-height:100px; height:auto;">
			                                </button>
			                            </div>
			                            
			                            <div class="ec-productRole__btn" style="width:100%;">
			                                <button type="button" class="ec-blockBtn--action back-main" style="outline:none; background: url({{ asset('assets/img/btn_back.png') }}) no-repeat scroll 0 0; border-color:#fff;min-height:100px; height:auto;">
			                                </button>
			                            </div>
			                            
				                            
		                    </div>
		                    <!-- .オプション一覧-->
		                 <!----- .【詳細を指定】ブロック ----->
		                 </div>
		                {% endif %}
		                <!-- .blk_syousai_sitei -->
		                 
                        {{ form_rest(form) }}
                        
                        
                         
                    <div class="ec-modal">
                        <div class="ec-modal-overlay">
                            <div class="ec-modal-wrap">
                                <span class="ec-modal-close"><span class="ec-icon"><img src="{{ asset('assets/icon/cross-dark.svg') }}" alt=""/></span></span>
                                <div id="ec-modal-header" class="text-center">{{ 'カートに追加しました。'|trans }}</div>
                                <div class="ec-modal-box">
                                    <div class="ec-role">
                                        <span class="ec-inlineBtn--cancel">{{ 'お買い物を続ける'|trans }}</span>
                                        <a href="{{ url('cart') }}" class="ec-inlineBtn--action">{{ 'カートへ進む'|trans }}</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!--
                    {% if BaseInfo.option_favorite_product %}
                        <form action="{{ url('product_add_favorite', {id:Product.id}) }}" method="post">
                            <div class="ec-productRole__btn">
                                {% if is_favorite == false %}
                                    <button type="submit" id="favorite" class="ec-blockBtn--cancel">
                                        {{ 'お気に入りに追加'|trans }}
                                    </button>
                                {% else %}
                                    <button type="submit" id="favorite" class="ec-blockBtn--cancel"
                                            disabled="disabled">{{ 'お気に入りに追加済です。'|trans }}
                                    </button>
                                {% endif %}
                            </div>
                        </form>
                    {% endif %}
                    -->
                    
                    </div>
                </div>
            </div>
        </div>
        
        
        
              
        </form>
        
    </div>
{% endblock %}