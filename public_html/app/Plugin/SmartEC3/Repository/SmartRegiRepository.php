<?php

namespace Plugin\SmartEC3\Repository;

use Eccube\Repository\AbstractRepository;
use Plugin\SmartEC3\Entity\SmartRegi;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * SmartRegiRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SmartRegiRepository extends AbstractRepository
{
    /**
     * SmartRegiRepository constructor.
     *
     * @param RegistryInterface $registry
     */
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, SmartRegi::class);
    }

    /**
     * @param int $id
     *
     * @return null|SmartRegi
     */
    public function get($id = 1)
    {
        return $this->find($id);
    }

    /**
     * @param \Eccube\Entity\Product|null $product
     *
     * @return null|SmartRegi
     */
    public function getFromProduct($product = null)
    {
        $qb = $this->createQueryBuilder('s');
        $qb->where('s.Product = :product')
            ->setParameter('product', $product);

        $smartRegi = $qb
            ->getQuery()
            ->getOneOrNullResult();

        return $smartRegi;
    }
    /**
     * @param array $Products
     *
     * @return null|SmartRegi
     */
    public function getSmartDataForSearchedProductsAdmin($Products)
    {

        $qb = $this->createQueryBuilder('s');
        $qb->where($qb->expr()->in('s.Product',':Products'))
        ->setParameter('Products', $Products);
        $smartRegis = $qb->getQuery()->getResult();

        return $smartRegis;
    }
}
